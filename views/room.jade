extends layout

block content
    div.room
        h1.title= title

        form.sign-in#sign-in
            p Enter a username
            input#username(placeholder="Username")
            button#join(type="submit") Join
        div.play#play
            button#play-C3.play-note play C
            button#play-D3.play-note play D
            button#play-E3.play-note play E
            button#play-F3.play-note play F
            button#play-G3.play-note play G
            button#play-A4.play-note play A
            button#play-B4.play-note play B
            button#play-C4.play-note play C

block js
    script(src="/socket.io/socket.io.js")
    script(src="/bower_components/Thunder/thunder.js")
    script.
        Th.init();

        //based on http://joewlarson.com/thunderjs/demo.html
        var sound = {
                sineFunc:function(si, len,  frq, chn, opt) {
                    var fad=Math.min(1,(opt.sustain || 1)*(len-si)/len); // used to fade out, to avoid an abrupt chop off of the wave, which causes a click.
                    return Math.floor(fad*128*256*(
                        Math.sin(2.0 * Math.PI * frq * si  / 44100)
                    ));
                }
            };

        sound.playInstrument = function(pitch){
            //if(Th.Inst.get('default') == null)
            //Th.Inst.create('default', sound.sineFunc);
            Th.Inst.create('default', sound.sineFunc).getSound(pitch).play();
        };


    script.
        var roomId = '#{roomId}'
        var socket = io();

        var joinRoom = document.getElementById('join');
        joinRoom.onclick = function(){
            var username = document.getElementById('username').value;
            if(roomId && username){
                socket.emit('joinroom', username, roomId);
                document.getElementById('sign-in').style.display = 'none';
                document.getElementById('play').style.display = 'block';
            }
            else{
                alert('Please enter a username');
            }

            return false;
        };

        function sendData(data){
            socket.emit('senddata', data);
        }

        socket.on('recievedata', function(user, data){
            sound.playInstrument(data);
        });

    script.
        var messages = document.getElementById('messages');
        var message = document.getElementById('message-input');
        var playButtons = document.getElementsByClassName('play-note');
        playButtons = Array.prototype.slice.call(playButtons);

        playButtons.map(function(button, idx){
            playButtons[idx].onclick = function(){
                var id = button.id;
                var note = id.split('-')[1];
                sound.playInstrument(note);
                sendData(note);
            };
        });

        var keymap = {
            49: 'C3',
            50: 'D3',
            51: 'E3',
            52: 'F3',
            53: 'G3',
            54: 'A4',
            55: 'B4',
            56: 'C4'
        };

        window.onkeydown = function(e) {
            var key = e.keyCode ? e.keyCode : e.which;
            if(keymap[key]){
                sound.playInstrument(keymap[key]);
                sendData(keymap[key]);
            }
        };

